module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.3). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateSensorPayload {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar DateTime

scalar Long

type Mutation {
  createSensorPayload(data: SensorPayloadCreateInput!): SensorPayload!
  updateSensorPayload(data: SensorPayloadUpdateInput!, where: SensorPayloadWhereUniqueInput!): SensorPayload
  updateManySensorPayloads(data: SensorPayloadUpdateManyMutationInput!, where: SensorPayloadWhereInput): BatchPayload!
  upsertSensorPayload(where: SensorPayloadWhereUniqueInput!, create: SensorPayloadCreateInput!, update: SensorPayloadUpdateInput!): SensorPayload!
  deleteSensorPayload(where: SensorPayloadWhereUniqueInput!): SensorPayload
  deleteManySensorPayloads(where: SensorPayloadWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  sensorPayload(where: SensorPayloadWhereUniqueInput!): SensorPayload
  sensorPayloads(where: SensorPayloadWhereInput, orderBy: SensorPayloadOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SensorPayload]!
  sensorPayloadsConnection(where: SensorPayloadWhereInput, orderBy: SensorPayloadOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SensorPayloadConnection!
  node(id: ID!): Node
}

type SensorPayload {
  id: ID!
  deviceId: String
  type: String!
  timestamp: DateTime
  latitude: Float!
  longitude: Float!
  accuracy: Int!
  altitude: Int!
  fixQuality: Int!
  velocity: Int!
  usingCellularLocation: Int!
  motionTriggered: Int!
  satellites: Int!
  batteryVoltage: Float!
  batteryPercentCharge: Float!
  batteryAlert: Int!
  cellSignalStrength: Int!
  cellQuality: Int!
  temperatureF: Float!
  rangeInInches: Int!
  x: Int!
  y: Int!
  z: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SensorPayloadConnection {
  pageInfo: PageInfo!
  edges: [SensorPayloadEdge]!
  aggregate: AggregateSensorPayload!
}

input SensorPayloadCreateInput {
  id: ID
  deviceId: String
  type: String!
  timestamp: DateTime
  latitude: Float!
  longitude: Float!
  accuracy: Int!
  altitude: Int!
  fixQuality: Int!
  velocity: Int!
  usingCellularLocation: Int!
  motionTriggered: Int!
  satellites: Int!
  batteryVoltage: Float!
  batteryPercentCharge: Float!
  batteryAlert: Int!
  cellSignalStrength: Int!
  cellQuality: Int!
  temperatureF: Float!
  rangeInInches: Int!
  x: Int!
  y: Int!
  z: Int!
}

type SensorPayloadEdge {
  node: SensorPayload!
  cursor: String!
}

enum SensorPayloadOrderByInput {
  id_ASC
  id_DESC
  deviceId_ASC
  deviceId_DESC
  type_ASC
  type_DESC
  timestamp_ASC
  timestamp_DESC
  latitude_ASC
  latitude_DESC
  longitude_ASC
  longitude_DESC
  accuracy_ASC
  accuracy_DESC
  altitude_ASC
  altitude_DESC
  fixQuality_ASC
  fixQuality_DESC
  velocity_ASC
  velocity_DESC
  usingCellularLocation_ASC
  usingCellularLocation_DESC
  motionTriggered_ASC
  motionTriggered_DESC
  satellites_ASC
  satellites_DESC
  batteryVoltage_ASC
  batteryVoltage_DESC
  batteryPercentCharge_ASC
  batteryPercentCharge_DESC
  batteryAlert_ASC
  batteryAlert_DESC
  cellSignalStrength_ASC
  cellSignalStrength_DESC
  cellQuality_ASC
  cellQuality_DESC
  temperatureF_ASC
  temperatureF_DESC
  rangeInInches_ASC
  rangeInInches_DESC
  x_ASC
  x_DESC
  y_ASC
  y_DESC
  z_ASC
  z_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SensorPayloadPreviousValues {
  id: ID!
  deviceId: String
  type: String!
  timestamp: DateTime
  latitude: Float!
  longitude: Float!
  accuracy: Int!
  altitude: Int!
  fixQuality: Int!
  velocity: Int!
  usingCellularLocation: Int!
  motionTriggered: Int!
  satellites: Int!
  batteryVoltage: Float!
  batteryPercentCharge: Float!
  batteryAlert: Int!
  cellSignalStrength: Int!
  cellQuality: Int!
  temperatureF: Float!
  rangeInInches: Int!
  x: Int!
  y: Int!
  z: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SensorPayloadSubscriptionPayload {
  mutation: MutationType!
  node: SensorPayload
  updatedFields: [String!]
  previousValues: SensorPayloadPreviousValues
}

input SensorPayloadSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SensorPayloadWhereInput
  AND: [SensorPayloadSubscriptionWhereInput!]
  OR: [SensorPayloadSubscriptionWhereInput!]
  NOT: [SensorPayloadSubscriptionWhereInput!]
}

input SensorPayloadUpdateInput {
  deviceId: String
  type: String
  timestamp: DateTime
  latitude: Float
  longitude: Float
  accuracy: Int
  altitude: Int
  fixQuality: Int
  velocity: Int
  usingCellularLocation: Int
  motionTriggered: Int
  satellites: Int
  batteryVoltage: Float
  batteryPercentCharge: Float
  batteryAlert: Int
  cellSignalStrength: Int
  cellQuality: Int
  temperatureF: Float
  rangeInInches: Int
  x: Int
  y: Int
  z: Int
}

input SensorPayloadUpdateManyMutationInput {
  deviceId: String
  type: String
  timestamp: DateTime
  latitude: Float
  longitude: Float
  accuracy: Int
  altitude: Int
  fixQuality: Int
  velocity: Int
  usingCellularLocation: Int
  motionTriggered: Int
  satellites: Int
  batteryVoltage: Float
  batteryPercentCharge: Float
  batteryAlert: Int
  cellSignalStrength: Int
  cellQuality: Int
  temperatureF: Float
  rangeInInches: Int
  x: Int
  y: Int
  z: Int
}

input SensorPayloadWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  deviceId: String
  deviceId_not: String
  deviceId_in: [String!]
  deviceId_not_in: [String!]
  deviceId_lt: String
  deviceId_lte: String
  deviceId_gt: String
  deviceId_gte: String
  deviceId_contains: String
  deviceId_not_contains: String
  deviceId_starts_with: String
  deviceId_not_starts_with: String
  deviceId_ends_with: String
  deviceId_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  timestamp: DateTime
  timestamp_not: DateTime
  timestamp_in: [DateTime!]
  timestamp_not_in: [DateTime!]
  timestamp_lt: DateTime
  timestamp_lte: DateTime
  timestamp_gt: DateTime
  timestamp_gte: DateTime
  latitude: Float
  latitude_not: Float
  latitude_in: [Float!]
  latitude_not_in: [Float!]
  latitude_lt: Float
  latitude_lte: Float
  latitude_gt: Float
  latitude_gte: Float
  longitude: Float
  longitude_not: Float
  longitude_in: [Float!]
  longitude_not_in: [Float!]
  longitude_lt: Float
  longitude_lte: Float
  longitude_gt: Float
  longitude_gte: Float
  accuracy: Int
  accuracy_not: Int
  accuracy_in: [Int!]
  accuracy_not_in: [Int!]
  accuracy_lt: Int
  accuracy_lte: Int
  accuracy_gt: Int
  accuracy_gte: Int
  altitude: Int
  altitude_not: Int
  altitude_in: [Int!]
  altitude_not_in: [Int!]
  altitude_lt: Int
  altitude_lte: Int
  altitude_gt: Int
  altitude_gte: Int
  fixQuality: Int
  fixQuality_not: Int
  fixQuality_in: [Int!]
  fixQuality_not_in: [Int!]
  fixQuality_lt: Int
  fixQuality_lte: Int
  fixQuality_gt: Int
  fixQuality_gte: Int
  velocity: Int
  velocity_not: Int
  velocity_in: [Int!]
  velocity_not_in: [Int!]
  velocity_lt: Int
  velocity_lte: Int
  velocity_gt: Int
  velocity_gte: Int
  usingCellularLocation: Int
  usingCellularLocation_not: Int
  usingCellularLocation_in: [Int!]
  usingCellularLocation_not_in: [Int!]
  usingCellularLocation_lt: Int
  usingCellularLocation_lte: Int
  usingCellularLocation_gt: Int
  usingCellularLocation_gte: Int
  motionTriggered: Int
  motionTriggered_not: Int
  motionTriggered_in: [Int!]
  motionTriggered_not_in: [Int!]
  motionTriggered_lt: Int
  motionTriggered_lte: Int
  motionTriggered_gt: Int
  motionTriggered_gte: Int
  satellites: Int
  satellites_not: Int
  satellites_in: [Int!]
  satellites_not_in: [Int!]
  satellites_lt: Int
  satellites_lte: Int
  satellites_gt: Int
  satellites_gte: Int
  batteryVoltage: Float
  batteryVoltage_not: Float
  batteryVoltage_in: [Float!]
  batteryVoltage_not_in: [Float!]
  batteryVoltage_lt: Float
  batteryVoltage_lte: Float
  batteryVoltage_gt: Float
  batteryVoltage_gte: Float
  batteryPercentCharge: Float
  batteryPercentCharge_not: Float
  batteryPercentCharge_in: [Float!]
  batteryPercentCharge_not_in: [Float!]
  batteryPercentCharge_lt: Float
  batteryPercentCharge_lte: Float
  batteryPercentCharge_gt: Float
  batteryPercentCharge_gte: Float
  batteryAlert: Int
  batteryAlert_not: Int
  batteryAlert_in: [Int!]
  batteryAlert_not_in: [Int!]
  batteryAlert_lt: Int
  batteryAlert_lte: Int
  batteryAlert_gt: Int
  batteryAlert_gte: Int
  cellSignalStrength: Int
  cellSignalStrength_not: Int
  cellSignalStrength_in: [Int!]
  cellSignalStrength_not_in: [Int!]
  cellSignalStrength_lt: Int
  cellSignalStrength_lte: Int
  cellSignalStrength_gt: Int
  cellSignalStrength_gte: Int
  cellQuality: Int
  cellQuality_not: Int
  cellQuality_in: [Int!]
  cellQuality_not_in: [Int!]
  cellQuality_lt: Int
  cellQuality_lte: Int
  cellQuality_gt: Int
  cellQuality_gte: Int
  temperatureF: Float
  temperatureF_not: Float
  temperatureF_in: [Float!]
  temperatureF_not_in: [Float!]
  temperatureF_lt: Float
  temperatureF_lte: Float
  temperatureF_gt: Float
  temperatureF_gte: Float
  rangeInInches: Int
  rangeInInches_not: Int
  rangeInInches_in: [Int!]
  rangeInInches_not_in: [Int!]
  rangeInInches_lt: Int
  rangeInInches_lte: Int
  rangeInInches_gt: Int
  rangeInInches_gte: Int
  x: Int
  x_not: Int
  x_in: [Int!]
  x_not_in: [Int!]
  x_lt: Int
  x_lte: Int
  x_gt: Int
  x_gte: Int
  y: Int
  y_not: Int
  y_in: [Int!]
  y_not_in: [Int!]
  y_lt: Int
  y_lte: Int
  y_gt: Int
  y_gte: Int
  z: Int
  z_not: Int
  z_in: [Int!]
  z_not_in: [Int!]
  z_lt: Int
  z_lte: Int
  z_gt: Int
  z_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [SensorPayloadWhereInput!]
  OR: [SensorPayloadWhereInput!]
  NOT: [SensorPayloadWhereInput!]
}

input SensorPayloadWhereUniqueInput {
  id: ID
}

type Subscription {
  sensorPayload(where: SensorPayloadSubscriptionWhereInput): SensorPayloadSubscriptionPayload
}
`
      }
    